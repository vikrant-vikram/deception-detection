=======================+ALL==========================
(vikrant) (project1) arunb@iiitd:~/vikrant/Project/final/final$ python v3.py 
Project will run for ACTUAL_LIE task
Training or inference? (t/i): i
Which messages to test? (truthful/deceptive/all): all
2025-04-15 12:09:35,335 - INFO - __main__ - Running inference for all messages
/home/arunb/vikrant/Project/final/final/v3.py:446: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location=Config.DEVICE))
2025-04-15 12:09:41,620 - INFO - __main__ - Loading cached samples from data_cache/ACTUAL_LIE_samples.pt
/home/arunb/vikrant/Project/final/final/v3.py:101: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.samples = torch.load(cache_file)
Evaluating all messages: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████| 394/394 [00:57<00:00,  6.80it/s]

Results for all messages (ACTUAL_LIE):
Number of samples: 12591
Accuracy: 0.9990
F1 Score: 0.9882
Precision: 0.9855
Recall: 0.9909
Confusion Matrix:
[[12034, 8], [5, 544]]

Example predictions:

Text: It seems like there are a lot of ways that could go wrong...I don't see why France would see you approaching/taking Munich--while I do nothing about it--and not immediately feel skittish
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: Yeah, I can’t say I’ve tried it and it works, cause I’ve never tried it or seen it. But how I think it would work is (a) my Spring move looks like an attack on Austria, so it would not be surprising if you did not cover Munich. Then (b) you build two armies, which looks like we’re really at war and you’re going to eject me. Then we launch the attack in Spring. So there is really no part of this that would raise alarm bells with France.

All that said, I’ve literally never done it before, and it does involve risk for you, so I’m not offended or concerned if it’s just not for you. I’m happy to play more conventionally too. Up to you.
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: I am just sensing that you don’t like this idea, so shall we talk about something else? That was just a crazy idea I’ve always wanted to try. I’m happy to play more conservatively.
True: Truthful, Predicted: Truthful
Confidence: 0.9990
Probabilities: Truthful=0.9990, Deceptive=0.0010

Text: Any thoughts?
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: Sorry Italy I've been away doing, um, German things. Brewing Lagers?
True: Truthful, Predicted: Truthful
Confidence: 0.9986
Probabilities: Truthful=0.9986, Deceptive=0.0014


========================+DECEPTIVE==========================

(vikrant) (project1) arunb@iiitd:~/vikrant/Project/final/final$ python v3.py 
Project will run for ACTUAL_LIE task
Training or inference? (t/i): i
Which messages to test? (truthful/deceptive/all): deceptive
2025-04-15 12:11:27,401 - INFO - __main__ - Running inference for deceptive messages
/home/arunb/vikrant/Project/final/final/v3.py:446: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location=Config.DEVICE))
2025-04-15 12:11:34,363 - INFO - __main__ - Loading cached samples from data_cache/ACTUAL_LIE_samples.pt
/home/arunb/vikrant/Project/final/final/v3.py:101: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.samples = torch.load(cache_file)
Evaluating deceptive messages: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 18/18 [00:02<00:00,  6.35it/s]

Results for deceptive messages (ACTUAL_LIE):
Number of samples: 549
Accuracy: 0.9909
F1 Score: 0.9954
Precision: 1.0000
Recall: 0.9909
Confusion Matrix:
[[0, 0], [5, 544]]

Example predictions:

Text: I really don’t think that’s a fair description. You guys both wanted to attack each other. I encouraged you both to keep working together.
True: Deceptive, Predicted: Deceptive
Confidence: 0.9952
Probabilities: Truthful=0.0048, Deceptive=0.9952

Text: We’re friends, right? I believe that every single message I’ve sent you all game has been truth, and I’ve gone out of my way to give you candid advice. Are we still friends?
True: Deceptive, Predicted: Deceptive
Confidence: 0.9947
Probabilities: Truthful=0.0053, Deceptive=0.9947

Text: I have to say that I’m surprised that you feel that I’ve betrayed your trust. I have been feeling like maybe I’ve been TOO helpful to you, and been a bit over the top in offering advice, etc., but it seems like I’ve misread the situation.
True: Deceptive, Predicted: Deceptive
Confidence: 0.9565
Probabilities: Truthful=0.0435, Deceptive=0.9565

Text: Here’s the deal: I like you better than England.
True: Deceptive, Predicted: Deceptive
Confidence: 0.9953
Probabilities: Truthful=0.0047, Deceptive=0.9953

Text: But I don’t think there is anything wrong with me contemplating moves without telling you all of them. You asked me about it, and I told you the truth.
True: Deceptive, Predicted: Deceptive
Confidence: 0.9777


========================+TRUTHFUL=========================

(vikrant) (project1) arunb@iiitd:~/vikrant/Project/final/final$ python v3.py 
Project will run for ACTUAL_LIE task
Training or inference? (t/i): i
Which messages to test? (truthful/deceptive/all): truthful
2025-04-15 12:12:21,285 - INFO - __main__ - Running inference for truthful messages
/home/arunb/vikrant/Project/final/final/v3.py:446: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location=Config.DEVICE))
2025-04-15 12:12:28,418 - INFO - __main__ - Loading cached samples from data_cache/ACTUAL_LIE_samples.pt
/home/arunb/vikrant/Project/final/final/v3.py:101: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.samples = torch.load(cache_file)
Evaluating truthful messages: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 377/377 [00:56<00:00,  6.72it/s]

Results for truthful messages (ACTUAL_LIE):
Number of samples: 12042
Accuracy: 0.9993
F1 Score: 0.0000
Precision: 0.0000
Recall: 0.0000
Confusion Matrix:
[[12034, 8], [0, 0]]

Example predictions:

Text: It seems like there are a lot of ways that could go wrong...I don't see why France would see you approaching/taking Munich--while I do nothing about it--and not immediately feel skittish
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: Yeah, I can’t say I’ve tried it and it works, cause I’ve never tried it or seen it. But how I think it would work is (a) my Spring move looks like an attack on Austria, so it would not be surprising if you did not cover Munich. Then (b) you build two armies, which looks like we’re really at war and you’re going to eject me. Then we launch the attack in Spring. So there is really no part of this that would raise alarm bells with France.

All that said, I’ve literally never done it before, and it does involve risk for you, so I’m not offended or concerned if it’s just not for you. I’m happy to play more conventionally too. Up to you.
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: I am just sensing that you don’t like this idea, so shall we talk about something else? That was just a crazy idea I’ve always wanted to try. I’m happy to play more conservatively.
True: Truthful, Predicted: Truthful
Confidence: 0.9990
Probabilities: Truthful=0.9990, Deceptive=0.0010

Text: Any thoughts?
True: Truthful, Predicted: Truthful
Confidence: 0.9992
Probabilities: Truthful=0.9992, Deceptive=0.0008

Text: Sorry Italy I've been away doing, um, German things. Brewing Lagers?
True: Truthful, Predicted: Truthful
Confidence: 0.9986
Probabilities: Truthful=0.9986, Deceptive=0.0014